<template>
  <VueDraggableResizable
    :w="initW"
    :h="initH"
    :x="0"
    :y="0"
    @resizestop="onResizestop"
    @dragstop="onDragstop"
    @deactivated="onDeactivated"
    @activated="onActivated"
  >
    <slot></slot>
  </VueDraggableResizable>
</template>

<script>
import VueDraggableResizable from "vue-draggable-resizable";
import "vue-draggable-resizable/dist/VueDraggableResizable.css";
import * as echarts from "echarts";
export default {
  props: {
    optionObj: {
      type: Object,
    },
  },
  data() {
    return {
      myChart: null,
      initW: 300,
      initH:300,

    };
  },
  methods: {
    initData(){
      this.optionObj.css = {
        left: '0px',
        top: '0px',
        width:this.caculateSizeX(this.initW)+'px',
        height:this.caculateSizeY(this.initH)+'px'
      };  
      console.log(JSON.stringify(this.optionObj.css))
    },
    caculateSizeX(num){
      return (this.$parent.rowSize * num).toFixed(1);
    },
    caculateSizeY(num){
      return (this.$parent.colSize * num).toFixed(1);
    },
    //缩放
    onResizestop(x, y, width, height) {
      if (this.optionObj.css) {
        this.optionObj.css.left = this.caculateSizeX(x)+'px';
        this.optionObj.css.top = this.caculateSizeY(y)+'px';
        this.optionObj.css.width = this.caculateSizeX(width)+'px';
        this.optionObj.css.height = this.caculateSizeY(height)+'px';
      }
      console.log(JSON.stringify(this.optionObj.css))
      this.myChart.resize();
    },
    //平移
    onDragstop(x, y) {
      if (this.optionObj.css) {
        this.optionObj.css.left = this.caculateSizeX(x)+'px';
        this.optionObj.css.top = this.caculateSizeY(y)+'px';
      }
      console.log(JSON.stringify(this.optionObj.css))
    },
    //失去焦点时
    onDeactivated(){
       console.log('失去焦点时:')
    },
    //获取焦点时
    onActivated(){
       console.log('获取焦点时:')
    },
    initEcharts() {
      this.myChart = echarts.init(
        document.getElementById(this.optionObj.domId)
      );
      this.myChart.setOption(this.optionObj.option);
    },
  },
  components: {
    VueDraggableResizable,
  },
  mounted() {
    this.$nextTick(() => {
      this.initData();
      this.initEcharts();
    });
  },
};
</script>

<style scoped >
.drag_box {
  width: 100%;
  height: 100%;
}
</style>