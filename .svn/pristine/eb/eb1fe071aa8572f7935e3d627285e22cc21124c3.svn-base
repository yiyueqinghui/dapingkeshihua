<template>
  <div id="build">
       <div class="box" v-for="item in allOptions" :id="item.domId" :style="item.css" :key="item.domId">

       </div>
  </div>
</template>

<script>
import * as echarts from "echarts";
export default {
    data(){
        return {
            allOptions:[{"name":"柱状图","icon":"icontubiao2","src":"../../../static/img/echartsIcon/jichu-bar.png","option":{"xAxis":{"type":"category","data":["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},"yAxis":{"type":"value"},"series":[{"data":[120,200,150,80,70,110,130],"type":"bar","showBackground":true,"backgroundStyle":{"color":"rgba(180, 180, 180, 0.2)"}}]},"domId":"echart_ac5ad138c67a1","css":{"left":"443.2px","top":"166.9px","width":"829.7px","height":"610.3px"}}],
            routeName:''

        }
    },
    methods:{
        getOption(){
            this.common.axiosPost('/page/get/option',{
                id:this.$route.params.id
            }).then(res=>{
                debugger;
                if(res.allOptions && res.allOptions.option){
                   this.allOptions = JSON.parse(res.allOptions.option);
                   this.initOption();
                }else{
                   this.$message.warning('暂无数据!')
                }

            })
        },
        preview(){
            let allOptions = this.common.deepClone(this.$parent.optionList);
            /*
            * 由于同一个页面，无法同时存在两个相同的echarts实例，即不能拥有两个相同的id,所有这里修改数据id。
            * echarts中，如果同一个页面，有两个相同的id,则浏览器警告如下：
            * There is a chart instance already initialized on the dom.'
            */
            allOptions.forEach(item=>{
                item.domId = 'preview_'+item.domId;
            })
            this.allOptions = allOptions;
            this.initOption();
               
        },
        initOption(){
             this.$nextTick(()=>{
                 this.allOptions.forEach(item=>{
                    var myChart = echarts.init(document.getElementById(item.domId)); 
                    var option = item.option;
                    myChart.setOption(option);                
                })


             })
        },
        //esc事件
        listenEscEvent(){   
            let me = this;
            document.addEventListener('keyup', me.escEvent)
        },
        escEvent(e){
           let me = this;
           console.log(e);
           if (e.keyCode == 27) {
                me.$parent.closePreview();
           }
        }
        

    },
    watch:{
        allOptions:{
            handler(val){
                console.log(val)
            },
            deep:true
        }
     
    },
    mounted(){
        let routeName = this.$route.name;
        this.routeName = routeName;
        if( routeName === 'build'){
           this.getOption();
        }else if(routeName === 'index'){
           this.preview();
           this.listenEscEvent();
        }
        

    },
    beforeDestroy(){
       document.removeEventListener('keyup',this.escEvent)
    }

}
</script>

<style scoped >
#build{
    width:100%;
    height: 100%;
    position: relative;
}
#build .box{
    position: absolute;
    border:1px solid red;
}



</style>